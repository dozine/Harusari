// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String 
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  dailyLogs DailyLog[]
  tasks     Task[]
  dailyGoals  Goal[]
}
model DailyLog {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  date      DateTime @db.Date
  content   String?  @db.Text 
  mood      String?
  moodComment String? @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([userId, date])
}


model Task {
  id          String    @id @default(uuid())
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  title       String
  description String?   @db.Text
  dueDate     DateTime?
  isCompleted Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Goal {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  date      DateTime @unique 
  goalText  String
  isAchieved Boolean @default(false) 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Weather{
  id String @id @default(uuid())
  date DateTime @db.Date
  condition String
  temperature Float
  humidity Int
  windSpeed Float
  location String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DailyQuote{
  id String @id @default(uuid())
  date DateTime @unique @db.Date
  text String @db.Text
  author String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}